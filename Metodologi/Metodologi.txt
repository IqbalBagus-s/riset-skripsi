METODOLOGI PENELITIAN
3.1 Paradigma Penelitian

Penelitian ini menggunakan paradigma positivistik, paradigma positivistik berasumsi bahwa realitas bersifat objektif dan dapat diukur secara kuantitatif. Dalam konteks ini, model CNN ResNet-18 dan ResNet-18 dengan modul CBAM diuji melalui eksperimen untuk melihat hubungan sebab-akibat antara penambahan modul attention dan peningkatan performa klasifikasi.

Paradigma ini sesuai karena penelitian:
- Menggunakan data numerik (accuracy, loss, precision, recall) untuk analisis.
- Menguji hipotesis melalui eksperimen terkontrol.
- Melibatkan proses deduktif dari teori menuju pengujian empiris.

3.2 Jenis dan Pendekatan Penelitian

Jenis penelitian ini adalah penelitian kuantitatif eksperimental (experimental research), yang termasuk dalam kategori positivistic methodology.

Penelitian dilakukan dengan cara memanipulasi satu variabel independen (penambahan modul CBAM pada arsitektur ResNet-18) dan mengamati pengaruhnya terhadap variabel dependen (tingkat akurasi klasifikasi pada dataset Tiny ImageNet).

Pendekatan ini bertujuan untuk menemukan hubungan sebab-akibat dan menilai secara empiris apakah integrasi CBAM benar-benar meningkatkan performa model CNN dasar.

3.3 Desain Penelitian

Desain penelitian yang digunakan adalah eksperimen komparatif, dengan tahapan utama sebagai berikut:

Model Baseline: Implementasi model CNN ResNet-18 standar.

Model Modifikasi: Implementasi ResNet-18 + CBAM.

Dataset: Tiny ImageNet-200 yang berisi 200 kelas gambar dengan resolusi 64×64 piksel.

Pelatihan dan Evaluasi: Kedua model dilatih dan diuji menggunakan data yang sama untuk memperoleh hasil perbandingan yang adil.

Analisis Hasil: Perbandingan dilakukan berdasarkan metrik evaluasi kuantitatif.

3.4 Variabel Penelitian

Variabel Independen (X):
Penambahan modul attention CBAM pada arsitektur ResNet-18.

Variabel Dependen (Y):
Hasil performa model yang diukur melalui:
Accuracy - Top-1 dan Top-5 accuracy
Parameters - Jumlah total parameters
FLOPs - Floating point operations
Inference Time - Waktu inferensi per gambar
Memory Usage - GPU memory consumption
Training Time - Waktu training per epoch

3.5 Dataset dan Sumber Data

Dataset yang digunakan adalah Tiny ImageNet-200, versi turunan dari ImageNet dengan:

200 kelas objek,

500 gambar pelatihan per kelas,

50 gambar validasi per kelas,

resolusi gambar 64×64 piksel.

Dataset ini dipilih karena:

Memiliki kompleksitas menengah, cocok untuk model ringan seperti ResNet-18.

Sering digunakan untuk eksperimen akademik dalam image classification.

Dapat dijalankan di lingkungan Google Colab tanpa memerlukan sumber daya GPU besar.

3.6 Prosedur Penelitian

Langkah-langkah utama dalam penelitian ini adalah sebagai berikut:

Persiapan Dataset:

Melakukan preprocessing data (resize, normalize, augmentasi gambar).

Implementasi Model:

Model 1: ResNet-18 standar.

Model 2: ResNet-18 dengan CBAM ditambahkan pada setiap residual block.

Pelatihan Model:

Menggunakan optimizer Adam atau SGD.

Hyperparameter: learning rate, batch size, epoch, dan scheduler.

Melakukan early stopping untuk menghindari overfitting.

Evaluasi Model:

Menghitung akurasi validasi, loss, dan waktu komputasi.

Visualisasi hasil melalui loss curve dan accuracy curve.

Analisis attention map untuk melihat fokus model.

Analisis Perbandingan:

Melakukan analisis komparatif antara dua model berdasarkan metrik performa dan kompleksitas komputasi.

3.7 Metode Analisis Data

Analisis data dilakukan secara kuantitatif dan empiris, mengikuti karakteristik metodologi positivistik:

Menggunakan statistik deskriptif untuk menampilkan hasil numerik.

Menghitung mean accuracy, standard deviation, dan improvement ratio.

Menggunakan uji hipotesis (misal paired t-test atau Wilcoxon test) bila diperlukan untuk menilai signifikansi peningkatan performa.

Analisis visual dilakukan terhadap attention map untuk memahami area fokus model.

3.8 Alat dan Lingkungan Eksperimen

Platform: Google Colab

Bahasa Pemrograman: Python 3

Library: PyTorch, Torchvision, NumPy, Matplotlib, Pandas

GPU: Tesla T4 (Google Colab default)

Framework Visualisasi: TensorBoard / Matplotlib

3.9 Validitas dan Reliabilitas

Validitas internal: dijaga dengan menggunakan dataset, preprocessing, dan konfigurasi pelatihan yang sama pada kedua model.

Reliabilitas hasil: dijaga dengan melakukan pelatihan berulang sebanyak tiga kali dan mengambil rata-rata hasil.